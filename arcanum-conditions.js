// Sistema de Condi√ß√µes Ambientais Globais - Arcanum Verbis
// Data de lan√ßamento do jogo como marco zero
const ARCANUM_LAUNCH_DATE = new Date('2024-01-01T00:00:00Z');

async function getArcanumConditions() {
    console.log("üîç CONDI√á√ïES DEBUG - Fun√ß√£o chamada");
    
    try {
        console.log("üîç CONDI√á√ïES DEBUG - Tentando conectar ao Firestore");
        const conditionsRef = window.doc(window.db, "gameConditions", "current");
        const conditionsSnap = await window.getDoc(conditionsRef);
        
        const agora = new Date();
        const chaveHora = `${agora.toDateString()} - ${agora.getHours()}:${Math.floor(agora.getMinutes()/30)*30}`;
        console.log("üîç CONDI√á√ïES DEBUG - Chave atual:", chaveHora);
        
        if (conditionsSnap.exists()) {
            const firestoreData = conditionsSnap.data();
            console.log("üîç CONDI√á√ïES DEBUG - Dados do Firestore:", firestoreData);
            console.log("üîç CONDI√á√ïES DEBUG - Chave salva:", firestoreData.timeKey);
            
            if (firestoreData.timeKey === chaveHora) {
                console.log("üîç CONDI√á√ïES DEBUG - USANDO dados do Firestore:", firestoreData.conditions);
                return firestoreData.conditions;
            }
        }
        
        console.log("üîç CONDI√á√ïES DEBUG - CALCULANDO novas condi√ß√µes");
        const diasDesdeInicio = Math.floor((agora - new Date('2024-01-01T00:00:00Z')) / (1000 * 60 * 60 * 24));
        const horasDesdeInicio = Math.floor((agora - new Date('2024-01-01T00:00:00Z')) / (1000 * 60 * 60));
        const meiasHorasDesdeInicio = Math.floor((agora - new Date('2024-01-01T00:00:00Z')) / (1000 * 60 * 30));
        
        const conditions = {
            periodo: agora.getHours() < 6 ? 'madrugada' : agora.getHours() < 12 ? 'manha' : agora.getHours() < 18 ? 'tarde' : 'noite',
            vento: ['norte', 'nordeste', 'leste', 'sudeste', 'sul', 'sudoeste', 'oeste', 'noroeste'][meiasHorasDesdeInicio % 8],
            clima: ['sol-forte', 'sol-fraco', 'nublado', 'chuva-leve', 'neblina', 'tempestade'][horasDesdeInicio % 6],
            pressao: ['alta', 'normal', 'baixa'][Math.floor(horasDesdeInicio / 2) % 3],
            energiaMagica: ['alta', 'normal', 'baixa', 'interferencia'][diasDesdeInicio % 4],
            temperatura: ['muito-frio', 'frio', 'ameno', 'quente', 'muito-quente'][diasDesdeInicio % 5],
            lua: ['nova', 'crescente', 'cheia', 'minguante'][Math.floor(diasDesdeInicio / 2) % 4],
            estacao: ['primavera', 'verao', 'outono', 'inverno'][Math.floor(diasDesdeInicio / 5) % 4]
        };
        
        console.log("üîç CONDI√á√ïES DEBUG - Condi√ß√µes calculadas:", conditions);
        console.log("üîç CONDI√á√ïES DEBUG - SALVANDO no Firestore");
        
        await window.setDoc(conditionsRef, { conditions, timeKey: chaveHora });
        console.log("üîç CONDI√á√ïES DEBUG - SALVO com sucesso");
        
        return conditions;
        
    } catch (error) {
        console.error("üîç CONDI√á√ïES DEBUG - ERRO:", error);
        const fallback = {
            periodo: 'tarde', estacao: 'inverno', vento: 'norte', clima: 'nublado',
            lua: 'cheia', temperatura: 'frio', pressao: 'alta', energiaMagica: 'normal'
        };
        console.log("üîç CONDI√á√ïES DEBUG - USANDO fallback:", fallback);
        return fallback;
    }
}


function getEventoEspecial(dia) {
    if (dia % 100 === 0) return 'eclipse-solar';
    if (dia % 77 === 0) return 'chuva-meteoros';
    if (dia % 50 === 0) return 'aurora-boreal';
    if (dia % 30 === 0) return 'solsticio';
    if (dia % 91 === 0) return 'eclipse-lunar';
    return null;
}

function getConditionIcon(tipo, valor) {
    const icones = {
        periodo: { manha: 'üåÖ', tarde: '‚òÄÔ∏è', noite: 'üåô', madrugada: 'üåå' },
        estacao: { primavera: 'üå∏', verao: 'üåû', outono: 'üçÇ', inverno: '‚ùÑÔ∏è' },
        vento: { norte: '‚¨ÜÔ∏èüí®', sul: '‚¨áÔ∏èüí®', leste: '‚û°Ô∏èüí®', oeste: '‚¨ÖÔ∏èüí®', nordeste: '‚ÜóÔ∏èüí®', noroeste: '‚ÜñÔ∏èüí®', sudeste: '‚ÜòÔ∏èüí®', sudoeste: '‚ÜôÔ∏èüí®' },
        clima: { 'sol-forte': '‚òÄÔ∏è', 'sol-fraco': 'üå§Ô∏è', nublado: '‚òÅÔ∏è', 'chuva-leve': 'üå¶Ô∏è', neblina: 'üå´Ô∏è', tempestade: '‚õàÔ∏è' },
        lua: { nova: 'üåë', crescente: 'üåì', cheia: 'üåï', minguante: 'üåó' },
        temperatura: { 'muito-frio': 'ü•∂', frio: '‚ùÑÔ∏è', ameno: 'üå°Ô∏è', quente: 'üî•', 'muito-quente': 'üåã' },
        pressao: { alta: 'üìà', normal: 'üìä', baixa: 'üìâ' },
        energiaMagica: { alta: '‚ö°', normal: '‚ú®', baixa: 'üí´', interferencia: 'üåÄ' }
    };
    return icones[tipo]?.[valor] || '‚ùì';
}

window.ArcanumConditions = {
    getConditions: getArcanumConditions,
    getIcon: getConditionIcon
};
