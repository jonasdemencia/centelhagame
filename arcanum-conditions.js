// Importa Firebase (adicione no topo do arquivo)
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";
import { getFirestore, doc, getDoc, setDoc } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-firestore.js";

// Configura√ß√£o Firebase
const firebaseConfig = {
    apiKey: "AIzaSyC0XfvjonW2gd1eGAZX7NBYfPGMwI2siJw",
    authDomain: "centelhagame-9d511.firebaseapp.com",
    projectId: "centelhagame-9d511",
    storageBucket: "centelhagame-9d511.appspot.com",
    messagingSenderId: "700809803145",
    appId: "1:700809803145:web:bff4c6a751ec9389919d58"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Sistema de Condi√ß√µes Ambientais Globais - Arcanum Verbis
const ARCANUM_LAUNCH_DATE = new Date('2024-01-01T00:00:00Z');

async function getArcanumConditions() {
    console.log("üîç CONDI√á√ïES DEBUG - Fun√ß√£o chamada");
    
    try {
        console.log("üîç CONDI√á√ïES DEBUG - Tentando conectar ao Firestore");
        const conditionsRef = doc(db, "gameConditions", "current");
        const conditionsSnap = await getDoc(conditionsRef);
        
        const hoje = new Date().toDateString();
        console.log("üîç CONDI√á√ïES DEBUG - Data de hoje:", hoje);
        
        if (conditionsSnap.exists()) {
            const firestoreData = conditionsSnap.data();
            console.log("üîç CONDI√á√ïES DEBUG - Dados do Firestore:", firestoreData);
            console.log("üîç CONDI√á√ïES DEBUG - Data salva:", firestoreData.date);
            console.log("üîç CONDI√á√ïES DEBUG - Datas coincidem?", firestoreData.date === hoje);
            
            if (firestoreData.date === hoje) {
                console.log("üîç CONDI√á√ïES DEBUG - USANDO dados do Firestore:", firestoreData.conditions);
                return firestoreData.conditions;
            }
        } else {
            console.log("üîç CONDI√á√ïES DEBUG - Documento n√£o existe no Firestore");
        }
        
        console.log("üîç CONDI√á√ïES DEBUG - CALCULANDO novas condi√ß√µes");
        const agora = new Date();
        const diasDesdeInicio = Math.floor((agora - ARCANUM_LAUNCH_DATE) / (1000 * 60 * 60 * 24));
        const horaAtual = agora.getHours();
        
        console.log("üîç CONDI√á√ïES DEBUG - Dias desde in√≠cio:", diasDesdeInicio);
        console.log("üîç CONDI√á√ïES DEBUG - Hora atual:", horaAtual);
        
        const conditions = {
            periodo: horaAtual < 6 ? 'madrugada' : horaAtual < 12 ? 'manha' : horaAtual < 18 ? 'tarde' : 'noite',
            estacao: ['primavera', 'verao', 'outono', 'inverno'][Math.floor(diasDesdeInicio / 30) % 4],
            vento: ['norte', 'nordeste', 'leste', 'sudeste', 'sul', 'sudoeste', 'oeste', 'noroeste'][Math.floor(diasDesdeInicio / 3) % 8],
            clima: ['sol-forte', 'sol-fraco', 'nublado', 'chuva-leve', 'neblina', 'tempestade'][Math.floor(diasDesdeInicio / 2) % 6],
            lua: ['nova', 'crescente', 'cheia', 'minguante'][Math.floor(diasDesdeInicio / 7) % 4],
            temperatura: ['muito-frio', 'frio', 'ameno', 'quente', 'muito-quente'][Math.floor(diasDesdeInicio / 5) % 5],
            pressao: ['alta', 'normal', 'baixa'][Math.floor(diasDesdeInicio / 4) % 3],
            eventoEspecial: getEventoEspecial(diasDesdeInicio),
            energiaMagica: ['alta', 'normal', 'baixa', 'interferencia'][Math.floor(diasDesdeInicio / 10) % 4]
        };
        
        console.log("üîç CONDI√á√ïES DEBUG - Condi√ß√µes calculadas:", conditions);
        console.log("üîç CONDI√á√ïES DEBUG - SALVANDO no Firestore");
        
        await setDoc(conditionsRef, { conditions, date: hoje });
        console.log("üîç CONDI√á√ïES DEBUG - SALVO com sucesso");
        
        return conditions;
        
    } catch (error) {
        console.error("üîç CONDI√á√ïES DEBUG - ERRO:", error);
        const agora = new Date();
        const diasDesdeInicio = Math.floor((agora - ARCANUM_LAUNCH_DATE) / (1000 * 60 * 60 * 24));
        const horaAtual = agora.getHours();
        
        const fallback = {
            periodo: horaAtual < 6 ? 'madrugada' : horaAtual < 12 ? 'manha' : horaAtual < 18 ? 'tarde' : 'noite',
            estacao: ['primavera', 'verao', 'outono', 'inverno'][Math.floor(diasDesdeInicio / 30) % 4],
            vento: ['norte', 'nordeste', 'leste', 'sudeste', 'sul', 'sudoeste', 'oeste', 'noroeste'][Math.floor(diasDesdeInicio / 3) % 8],
            clima: ['sol-forte', 'sol-fraco', 'nublado', 'chuva-leve', 'neblina', 'tempestade'][Math.floor(diasDesdeInicio / 2) % 6],
            lua: ['nova', 'crescente', 'cheia', 'minguante'][Math.floor(diasDesdeInicio / 7) % 4],
            temperatura: ['muito-frio', 'frio', 'ameno', 'quente', 'muito-quente'][Math.floor(diasDesdeInicio / 5) % 5],
            pressao: ['alta', 'normal', 'baixa'][Math.floor(diasDesdeInicio / 4) % 3],
            eventoEspecial: getEventoEspecial(diasDesdeInicio),
            energiaMagica: ['alta', 'normal', 'baixa', 'interferencia'][Math.floor(diasDesdeInicio / 10) % 4]
        };
        console.log("üîç CONDI√á√ïES DEBUG - USANDO fallback:", fallback);
        return fallback;
    }
}

function getEventoEspecial(dia) {
    if (dia % 100 === 0) return 'eclipse-solar';
    if (dia % 77 === 0) return 'chuva-meteoros';
    if (dia % 50 === 0) return 'aurora-boreal';
    if (dia % 30 === 0) return 'solsticio';
    if (dia % 91 === 0) return 'eclipse-lunar';
    return null;
}

function getConditionIcon(tipo, valor) {
    const icones = {
        periodo: { manha: 'üåÖ', tarde: '‚òÄÔ∏è', noite: 'üåô', madrugada: 'üåå' },
        estacao: { primavera: 'üå∏', verao: 'üåû', outono: 'üçÇ', inverno: '‚ùÑÔ∏è' },
        vento: { norte: '‚¨ÜÔ∏èüí®', sul: '‚¨áÔ∏èüí®', leste: '‚û°Ô∏èüí®', oeste: '‚¨ÖÔ∏èüí®', nordeste: '‚ÜóÔ∏èüí®', noroeste: '‚ÜñÔ∏èüí®', sudeste: '‚ÜòÔ∏èüí®', sudoeste: '‚ÜôÔ∏èüí®' },
        clima: { 'sol-forte': '‚òÄÔ∏è', 'sol-fraco': 'üå§Ô∏è', nublado: '‚òÅÔ∏è', 'chuva-leve': 'üå¶Ô∏è', neblina: 'üå´Ô∏è', tempestade: '‚õàÔ∏è' },
        lua: { nova: 'üåë', crescente: 'üåì', cheia: 'üåï', minguante: 'üåó' },
        temperatura: { 'muito-frio': 'ü•∂', frio: '‚ùÑÔ∏è', ameno: 'üå°Ô∏è', quente: 'üî•', 'muito-quente': 'üåã' },
        pressao: { alta: 'üìà', normal: 'üìä', baixa: 'üìâ' },
        energiaMagica: { alta: '‚ö°', normal: '‚ú®', baixa: 'üí´', interferencia: 'üåÄ' }
    };
    return icones[tipo]?.[valor] || '‚ùì';
}

window.ArcanumConditions = {
    getConditions: getArcanumConditions,
    getIcon: getConditionIcon
};
